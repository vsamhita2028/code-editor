{"version":3,"sources":["CustomEditor.js","App.js","index.js"],"names":["Customeditor","editorData","index","onChange","displayPreview","editormode","height","width","mode","language","value","result","theme","fontSize","wrapEnabled","highlightActiveLine","autoScrollEditorIntoView","editorProps","$blockScrolling","setOptions","showLineNumbers","tabSize","useWorker","App","useState","default","tri","fullscreen","layout","setLayout","lightMode","setMode","editorMode","setEditorMode","dropdownOpen","setDropdownOpen","setIndex","flipIcon","setFlipIcon","setWidth","collapsed","setCollapsed","id","name","extension","content","seteditorData","preview","setPreview","fileExplorerBg","setFileExplorerBg","toggleLightMode","insertConent","ChangeLayout","className","style","backgroundColor","Container","fluid","Row","Navbar","color","dark","NavbarBrand","href","Nav","NavItem","paddingRight","Provider","size","onClick","Dropdown","isOpen","toggle","prevState","direction","DropdownToggle","outline","DropdownMenu","DropdownItem","Col","md","Button","padding","title","srcDoc","sandbox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.155da444.chunk.js","sourcesContent":["import AceEditor from 'react-ace';\r\nimport \"ace-builds/webpack-resolver\"\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/snippets/html\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/snippets/javascript\";\r\nimport \"ace-builds/src-noconflict/mode-css\";\r\nimport \"ace-builds/src-noconflict/snippets/css\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/theme-textmate\";\r\nconst Customeditor = ({ editorData, index, onChange, displayPreview, editormode }) => {\r\n    const bindChanges = (value) => {\r\n        const result = editorData;\r\n        result[index][\"content\"] = value\r\n        onChange(result);\r\n        displayPreview(\"<html><body>\" + editorData[0][\"content\"] + \"<style>\" + editorData[1][\"content\"] + \"</style><script>\" + editorData[2][\"content\"] + \"</script><body></html>\")\r\n    }\r\n    return (\r\n        <>\r\n            <AceEditor\r\n                height={\"87%\"}\r\n                width={\"100%\"}\r\n                mode={editorData[index].language}\r\n                onChange={bindChanges}\r\n                value={editorData[index][\"content\"]}\r\n                theme={editormode}\r\n                fontSize={14}\r\n                wrapEnabled={true}\r\n                highlightActiveLine={true}\r\n                autoScrollEditorIntoView={true}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    showLineNumbers: true,\r\n                    tabSize: 2,\r\n                    useWorker: false\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Customeditor;","import { useState } from 'react';\nimport { FaFileCode } from \"react-icons/fa\";\nimport { IoChevronBackOutline, IoChevronForwardOutline, IoSunny, IoMoon } from \"react-icons/io5\";\nimport { IconContext } from \"react-icons\";\nimport './App.css';\nimport Customeditor from './CustomEditor';\nimport { Navbar, NavbarBrand, Col, Row, Button, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Container } from 'react-bootstrap';\nfunction App() {\n  const [layout, setLayout] = useState({ default: true, tri: false, fullscreen: false })\n  const [lightMode, setMode] = useState(true);\n  const [editorMode, setEditorMode] = useState(\"textmate\")\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n  const [index, setIndex] = useState(0);\n  const [flipIcon, setFlipIcon] = useState(true)\n  const [width, setWidth] = useState(\"12\")\n  const [collapsed, setCollapsed] = useState(false);\n  const [editorData, seteditorData] = useState([\n    {\n      id: 1,\n      name: \"index\",\n      language: \"html\",\n      extension: \"html\",\n      content: \"\"\n    },\n    {\n      id: 2,\n      name: \"index\",\n      language: \"css\",\n      extension: \"css\",\n      content: \"\"\n    },\n    {\n      id: 3,\n      name: \"indexsss\",\n      language: \"javascript\",\n      extension: \"js\",\n      content: \"\"\n    },\n  ])\n  const [preview, setPreview] = useState(\"<html><body>\" + editorData[0][\"content\"] + \"<style>\" + editorData[1][\"content\"] + \"</style><script>\" + editorData[2][\"content\"] + \"</script><body></html>\");\n  const [fileExplorerBg, setFileExplorerBg] = useState(\"white\")\n  const toggleExplorer = () => {\n    setCollapsed(!collapsed);\n    setFlipIcon(!flipIcon)\n    if (width === \"12\" && layout.default) {\n      setWidth(\"10\")\n    } else if (layout.default) {\n      setWidth(\"12\")\n    } else if (layout.tri) {\n      setWidth(\"5\");\n    }\n  }\n  const toggleLightMode = () => {\n    setMode(!lightMode);\n    if (editorMode === \"textmate\") setEditorMode(\"monokai\");\n    else setEditorMode(\"textmate\")\n    fileExplorerBg === \"white\" ? setFileExplorerBg(\"rgba(66, 66, 69, 1)\") : setFileExplorerBg(\"white\")\n  }\n  const insertConent = (index) => {\n    setIndex(index);\n  }\n  const ChangeLayout = (layout) => {\n    if (layout === \"default\") {\n      setWidth(\"12\")\n      setCollapsed(false);\n      setLayout({ default: true, tri: false, fullscreen: false })\n    } else if (layout === \"triple\") {\n      setWidth(\"5\")\n      setLayout({ default: false, tri: true, fullscreen: false })\n      setCollapsed(true);\n    }\n  }\n  return (\n    <div className=\"App\" style={lightMode ? { backgroundColor: \"rgb(241,243,244)\" } : { backgroundColor: \"rgba(41, 42, 47, 1)\" }}>\n      <Container fluid>\n        <Row>\n          <Navbar color=\"dark\" dark>\n            <NavbarBrand href=\"/\">Custom Editor</NavbarBrand>\n            <Nav className=\"mr-auto\" >\n\n              {!lightMode ? <NavItem style={{ paddingRight: \"10px\" }}>\n                <IconContext.Provider value={{ color: \"white\", size: \"37px\" }}>\n                  <div onClick={toggleLightMode}><IoSunny /></div>\n                </IconContext.Provider>\n              </NavItem> :\n                <NavItem style={{ paddingRight: \"10px\" }}>\n                  <IconContext.Provider value={{ color: \"white\", size: \"37px\" }}>\n                    <div onClick={toggleLightMode}><IoMoon /></div>\n                  </IconContext.Provider>\n                </NavItem>}\n              <NavItem>\n                <Dropdown isOpen={dropdownOpen} toggle={toggle} direction=\"down\" style={{ paddingRight: \"15px\" }}>\n                  <DropdownToggle color=\"light\" outline>\n                    Change Layout\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem onClick={() => ChangeLayout(\"default\")}>Default</DropdownItem>\n                    <DropdownItem onClick={() => ChangeLayout(\"triple\")}>Triple</DropdownItem>\n                  </DropdownMenu>\n                </Dropdown>\n              </NavItem>\n            </Nav>\n          </Navbar>\n        </Row>\n\n        <Row className=\"editor-section mt-2\" style={layout.tri ? { height: \"48em\" } : { height: \"400px\" }} >\n          {collapsed &&\n            <Col md={2} style={layout.tri ? { backgroundColor: fileExplorerBg, height: \"94%\" } : { backgroundColor: fileExplorerBg }} >\n              <h3 className=\"mb-3 mt-2\" style={{ color: \"rgba(182, 179, 179, 1)\" }}>File Explorer</h3>\n              <div className=\"fileExplorer-items\" onClick={() => insertConent(0)}  >\n                <IconContext.Provider value={{ color: \"rgba(252, 199, 10, 1)\", className: \"global-class-name\" }}>\n                  <FaFileCode /> {editorData[0].name + \".\" + editorData[0].extension}\n                </IconContext.Provider>\n              </div>\n              <div className=\"fileExplorer-items\" onClick={() => insertConent(1)}>\n                <IconContext.Provider value={{ color: \"rgba(252, 199, 10, 1)\", className: \"global-class-name\" }}>\n                  <FaFileCode /> {editorData[0].name + \".\" + editorData[1].extension}\n                </IconContext.Provider>\n              </div>\n              <div className=\"fileExplorer-items\" onClick={() => insertConent(2)}>\n                <IconContext.Provider value={{ color: \"rgba(252, 199, 10, 1)\", className: \"global-class-name\" }}>\n                  <FaFileCode /> {editorData[0].name + \".\" + editorData[2].extension}\n                </IconContext.Provider>\n              </div>\n            </Col>}\n          <Col md={width}>\n            <h2><span><Button color={\"light\"} onClick={toggleExplorer}>{flipIcon ? <IoChevronForwardOutline /> : <IoChevronBackOutline />}</Button>{\" \"}<span className=\"custom-badge\">{editorData[index][\"language\"]}</span></span> </h2>\n            {<Customeditor editorData={editorData} index={index} onChange={seteditorData} displayPreview={setPreview} editormode={editorMode} />}\n          </Col>\n          {layout.tri && <Col md={5} className=\"mt-2\">\n            <center><span className=\"preview-badge\" style={{ width: \"5em\", padding: \"0.5em\" }}>Preview</span></center>\n            <iframe className={\"mt-3\"} title=\"live-preview\" srcDoc={preview} sandbox=\"allow-scripts\" width=\"100%\" height=\"86.8%\" ></iframe>\n          </Col>}\n        </Row>\n        {layout.default && <Row className=\"live-view\">\n          <center><span className=\"preview-badge\" style={{ width: \"5em\", padding: \"0.4em\" }}>Preview</span></center>\n          <span className=\"mt-3\"></span>\n          <iframe title=\"live-preview\" srcDoc={preview} sandbox=\"allow-scripts\" width=\"100%\" height=\"275px\"></iframe>\n        </Row>}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}